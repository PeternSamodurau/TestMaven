package Lesson_14.AbstractClass_14_2;

public class Main {

    // когда мы создаем иерархию классов, но родитель не является сущьностью
    // только в абстрактных классах можно создавать абстрактные методы - без реализации

    // В Java, интерфейсы и абстрактные классы используются для абстракции и полиморфизма, но они имеют различия:
    //Абстрактные классы могут иметь как абстрактные, так и неабстрактные методы, в то время как интерфейсы могут иметь только абстрактные методы.
    //Класс может наследовать только один абстрактный класс, но может реализовать несколько интерфейсов.
    //Абстрактные классы могут иметь поля данных, в то время как интерфейсы не могут содержать полей данных.
    //Абстрактные классы могут иметь конструкторы, в то время как интерфейсы не могут иметь конструкторов.

    public static void main(String[] args) {
     // Animal animal = new Animal();      НЕЛЬЗЯ СОЗДАТЬ объект данного класса т к  класс abstract
     // но можно полиморфизм
       Animal animal = new Cat();
       Animal animal1 = new Dog();
       animal.eat();                       // доступ к методам остается
       animal.canSleep();                  // появляется доступ к абстрактным методам
       animal.canRun();                    // появляется доступ к методам интерфейса
        System.out.println("_______________________");
       animal1.eat();
       animal1.canSleep();
       animal1.canRun();
    }
}
